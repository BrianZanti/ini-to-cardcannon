[epic-application]
title = Epic: Core Application
labels: inbox, app
story_text: # MiniShop
    BE Mod 2 Week 1 Solo Project
    NEWLINE
    ## Learning Goals
    NEWLINE
    ### Rails
    NEWLINE
    * Implement CRUD functionality for a resource using forms (form_tag or form_for), buttons, and links
    * Use MVC to organize code effectively, limiting the amount of logic included in views and controllers
    * Create routes for
      * standalone resources
      * nested resources
    * Template a view in Rails using a templating language (eg, `erb`)
    * Implement CRUD functionality for nested resources
    NEWLINE
    ### ActiveRecord
    NEWLINE
    * Create instance methods on a Rails model that use ActiveRecord associations
    * Use built-in ActiveRecord methods to:
      * create, read, update, and destroy records in a database
      * create records with relationships to other records in a database
    NEWLINE
    ### Databases
    NEWLINE
    * Describe Database Relationships, including the following terms:
      * Primary Key
      * Foreign Key
      * One to Many
    * Write migrations to create tables and relationships between tables
    * Describe ORMs and their advantages and use cases
    NEWLINE
    ### Testing and Debugging
    NEWLINE
    * Write feature tests utilizing:
      * RSpec and Capybara
      * CSS selectors to target specific areas of a page
    * Use Pry or Byebug in Rails files to get more information about an error
    * Use `save_and_open_page` to view the HTML generated when visiting a path in a feature test
    * Utilize the Rails console as a tool to get more information about the current state of a development database
    * Use `rails routes` to get additional information about the routes that exist in a Rails application
    NEWLINE
    ### Styling
    NEWLINE
    * Create basic Web Pages using the following tags
      * `<h1>`, `<h2>`, etc.
      * `<p>`
      * `<body>`
      * `<a>` and the `href` attribute
      * `<img>` and the `src` attribute
      * `<div>`
      * `<section>`
      * `<ul>`, `<ol>`, and `<li>`
      * `<form>`
      * `<input>`
    * Select HTML elements using classes and ids
    NEWLINE
    ### Web Applications
    NEWLINE
    * Describe the HTTP request/response cycle
    * Describe the different parts of HTTP requests and responses
    NEWLINE
    ## Requirements
    NEWLINE
    - must use Rails 5.1.x
    - must use PostgreSQL
    - must "handroll" all routes (no use of `resources` syntax)
    - must use `form_tag` for all forms (no use of `form_for`)
    NEWLINE
    ## Permitted
    NEWLINE
    - use FactoryBot to speed up your test development
    - use "rails generators" to speed up your app development
    NEWLINE
    ## Not Permitted
    NEWLINE
    - do not use JavaScript for pagination or sorting controls
    NEWLINE
    ## Permission
    NEWLINE
    - if there is a specific gem you'd like to use in the project, please get permission from your instructors firs
    NEWLINE
    ## User Stories


[deploy-to-heroku]
title: Deploy your application to Heroku
labels: heroku
child_of: epic-application
story_text: As a visitor or user of the site
    I will perform all user stories
    By visiting the application on Heroku.
    Localhost is fine for development, but
    the application must be hosted on Heroku.
